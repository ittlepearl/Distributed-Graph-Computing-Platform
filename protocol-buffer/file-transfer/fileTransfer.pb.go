// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fileTransfer.proto

/*
Package fileTransfer is a generated protocol buffer package.

It is generated from these files:
	fileTransfer.proto

It has these top-level messages:
	FileTransfer
*/
package fileTransfer

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FileTransfer_Command int32

const (
	FileTransfer_PUT    FileTransfer_Command = 0
	FileTransfer_GET    FileTransfer_Command = 1
	FileTransfer_DELETE FileTransfer_Command = 2
	FileTransfer_LS     FileTransfer_Command = 3
	FileTransfer_BACKUP FileTransfer_Command = 4
	FileTransfer_REPAIR FileTransfer_Command = 5
)

var FileTransfer_Command_name = map[int32]string{
	0: "PUT",
	1: "GET",
	2: "DELETE",
	3: "LS",
	4: "BACKUP",
	5: "REPAIR",
}
var FileTransfer_Command_value = map[string]int32{
	"PUT":    0,
	"GET":    1,
	"DELETE": 2,
	"LS":     3,
	"BACKUP": 4,
	"REPAIR": 5,
}

func (x FileTransfer_Command) String() string {
	return proto.EnumName(FileTransfer_Command_name, int32(x))
}
func (FileTransfer_Command) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type FileTransfer struct {
	Source       uint32                     `protobuf:"varint,1,opt,name=source" json:"source,omitempty"`
	Command      FileTransfer_Command       `protobuf:"varint,2,opt,name=command,enum=fileTransfer.FileTransfer_Command" json:"command,omitempty"`
	SdfsFilename string                     `protobuf:"bytes,3,opt,name=sdfsFilename" json:"sdfsFilename,omitempty"`
	Timestamp    *google_protobuf.Timestamp `protobuf:"bytes,4,opt,name=timestamp" json:"timestamp,omitempty"`
	File         []byte                     `protobuf:"bytes,5,opt,name=file,proto3" json:"file,omitempty"`
	Ack          bool                       `protobuf:"varint,6,opt,name=ack" json:"ack,omitempty"`
	// Master-related Variables
	Nodes         []uint32 `protobuf:"varint,7,rep,packed,name=nodes" json:"nodes,omitempty"`
	WriteConflict bool     `protobuf:"varint,8,opt,name=writeConflict" json:"writeConflict,omitempty"`
	AllMetadata   []byte   `protobuf:"bytes,9,opt,name=allMetadata,proto3" json:"allMetadata,omitempty"`
	Dest          uint32   `protobuf:"varint,10,opt,name=dest" json:"dest,omitempty"`
}

func (m *FileTransfer) Reset()                    { *m = FileTransfer{} }
func (m *FileTransfer) String() string            { return proto.CompactTextString(m) }
func (*FileTransfer) ProtoMessage()               {}
func (*FileTransfer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *FileTransfer) GetSource() uint32 {
	if m != nil {
		return m.Source
	}
	return 0
}

func (m *FileTransfer) GetCommand() FileTransfer_Command {
	if m != nil {
		return m.Command
	}
	return FileTransfer_PUT
}

func (m *FileTransfer) GetSdfsFilename() string {
	if m != nil {
		return m.SdfsFilename
	}
	return ""
}

func (m *FileTransfer) GetTimestamp() *google_protobuf.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *FileTransfer) GetFile() []byte {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *FileTransfer) GetAck() bool {
	if m != nil {
		return m.Ack
	}
	return false
}

func (m *FileTransfer) GetNodes() []uint32 {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *FileTransfer) GetWriteConflict() bool {
	if m != nil {
		return m.WriteConflict
	}
	return false
}

func (m *FileTransfer) GetAllMetadata() []byte {
	if m != nil {
		return m.AllMetadata
	}
	return nil
}

func (m *FileTransfer) GetDest() uint32 {
	if m != nil {
		return m.Dest
	}
	return 0
}

func init() {
	proto.RegisterType((*FileTransfer)(nil), "fileTransfer.FileTransfer")
	proto.RegisterEnum("fileTransfer.FileTransfer_Command", FileTransfer_Command_name, FileTransfer_Command_value)
}

func init() { proto.RegisterFile("fileTransfer.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 330 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0x41, 0x6f, 0x82, 0x40,
	0x10, 0x85, 0xbb, 0xa2, 0xa0, 0x23, 0x36, 0x64, 0xd2, 0x34, 0x1b, 0x2f, 0xdd, 0x90, 0x1e, 0x38,
	0x61, 0x62, 0x2f, 0x3d, 0xf4, 0x62, 0x2d, 0x35, 0x4d, 0x6d, 0x62, 0xb6, 0xf8, 0x03, 0x56, 0x58,
	0x0c, 0x29, 0xb0, 0x06, 0xd6, 0xf4, 0x07, 0xf5, 0x8f, 0x36, 0x80, 0xb6, 0x78, 0x7b, 0xf3, 0x78,
	0x8f, 0xf9, 0x76, 0x00, 0x93, 0x34, 0x93, 0x61, 0x29, 0x8a, 0x2a, 0x91, 0xa5, 0x7f, 0x28, 0x95,
	0x56, 0x68, 0x77, 0xbd, 0xe9, 0xdd, 0x5e, 0xa9, 0x7d, 0x26, 0x67, 0xcd, 0xb7, 0xdd, 0x31, 0x99,
	0xe9, 0x34, 0x97, 0x95, 0x16, 0xf9, 0xa1, 0x8d, 0xbb, 0x3f, 0x06, 0xd8, 0xaf, 0x9d, 0x06, 0xde,
	0x82, 0x59, 0xa9, 0x63, 0x19, 0x49, 0x4a, 0x18, 0xf1, 0x26, 0xfc, 0x34, 0xe1, 0x13, 0x58, 0x91,
	0xca, 0x73, 0x51, 0xc4, 0xb4, 0xc7, 0x88, 0x77, 0x3d, 0x77, 0xfd, 0x8b, 0xed, 0xdd, 0x9f, 0xf8,
	0xcb, 0x36, 0xc9, 0xcf, 0x15, 0x74, 0xc1, 0xae, 0xe2, 0xa4, 0xaa, 0x43, 0x85, 0xc8, 0x25, 0x35,
	0x18, 0xf1, 0x46, 0xfc, 0xc2, 0xc3, 0x47, 0x18, 0xfd, 0xd1, 0xd1, 0x3e, 0x23, 0xde, 0x78, 0x3e,
	0xf5, 0x5b, 0x7e, 0xff, 0xcc, 0xef, 0x87, 0xe7, 0x04, 0xff, 0x0f, 0x23, 0x42, 0xbf, 0x66, 0xa1,
	0x03, 0x46, 0x3c, 0x9b, 0x37, 0x1a, 0x1d, 0x30, 0x44, 0xf4, 0x45, 0x4d, 0x46, 0xbc, 0x21, 0xaf,
	0x25, 0xde, 0xc0, 0xa0, 0x50, 0xb1, 0xac, 0xa8, 0xc5, 0x0c, 0x6f, 0xc2, 0xdb, 0x01, 0xef, 0x61,
	0xf2, 0x5d, 0xa6, 0x5a, 0x2e, 0x55, 0x91, 0x64, 0x69, 0xa4, 0xe9, 0xb0, 0x69, 0x5c, 0x9a, 0xc8,
	0x60, 0x2c, 0xb2, 0xec, 0x43, 0x6a, 0x11, 0x0b, 0x2d, 0xe8, 0xa8, 0x59, 0xd4, 0xb5, 0x6a, 0x86,
	0x58, 0x56, 0x9a, 0x42, 0x73, 0xb5, 0x46, 0xbb, 0x2b, 0xb0, 0x4e, 0x97, 0x40, 0x0b, 0x8c, 0xcd,
	0x36, 0x74, 0xae, 0x6a, 0xb1, 0x0a, 0x42, 0x87, 0x20, 0x80, 0xf9, 0x12, 0xac, 0x83, 0x30, 0x70,
	0x7a, 0x68, 0x42, 0x6f, 0xfd, 0xe9, 0x18, 0xb5, 0xf7, 0xbc, 0x58, 0xbe, 0x6f, 0x37, 0x4e, 0xbf,
	0xd6, 0x3c, 0xd8, 0x2c, 0xde, 0xb8, 0x33, 0xd8, 0x99, 0xcd, 0xfb, 0x1f, 0x7e, 0x03, 0x00, 0x00,
	0xff, 0xff, 0x00, 0xc7, 0x6a, 0x50, 0xf1, 0x01, 0x00, 0x00,
}
